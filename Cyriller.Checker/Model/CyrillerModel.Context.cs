//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cyriller.Checker.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CyrillerEntities : DbContext
    {
        public CyrillerEntities()
            : base("name=CyrillerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Animate> Animates { get; set; }
        public virtual DbSet<Case> Cases { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<Number> Numbers { get; set; }
        public virtual DbSet<RawWord> RawWords { get; set; }
        public virtual DbSet<SpeechPart> SpeechParts { get; set; }
        public virtual DbSet<WordCase> WordCases { get; set; }
        public virtual DbSet<Word> Words { get; set; }
        public virtual DbSet<WordType> WordTypes { get; set; }
    
        public virtual int UpdateWordCases(Nullable<int> wordID, string case1, string case2, string case3, string case4, string case5, string case6)
        {
            var wordIDParameter = wordID.HasValue ?
                new ObjectParameter("WordID", wordID) :
                new ObjectParameter("WordID", typeof(int));
    
            var case1Parameter = case1 != null ?
                new ObjectParameter("Case1", case1) :
                new ObjectParameter("Case1", typeof(string));
    
            var case2Parameter = case2 != null ?
                new ObjectParameter("Case2", case2) :
                new ObjectParameter("Case2", typeof(string));
    
            var case3Parameter = case3 != null ?
                new ObjectParameter("Case3", case3) :
                new ObjectParameter("Case3", typeof(string));
    
            var case4Parameter = case4 != null ?
                new ObjectParameter("Case4", case4) :
                new ObjectParameter("Case4", typeof(string));
    
            var case5Parameter = case5 != null ?
                new ObjectParameter("Case5", case5) :
                new ObjectParameter("Case5", typeof(string));
    
            var case6Parameter = case6 != null ?
                new ObjectParameter("Case6", case6) :
                new ObjectParameter("Case6", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWordCases", wordIDParameter, case1Parameter, case2Parameter, case3Parameter, case4Parameter, case5Parameter, case6Parameter);
        }
    }
}
